name: Publish

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Version type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install packages
        run: npm ci

  lint:
    name: Lint
    needs: [ install ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Restore cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Linting
        run: npm run lint

  test:
    name: Test
    needs: [ install, lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Restore cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Mutation testing
        run: npm run testm

  publish:
    name: Publish to npm
    needs: [ install, lint, test ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'
      - name: Restore cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Set up GitHub App Scheduler Engine authentication
        run: |
          # Decode private key
          echo "${{ secrets.APP_SCHEDULER_ENGINE_PRIVATE_KEY }}" | base64 -d > app-private-key.pem

          # Generate signed json web token
          header='{"alg":"RS256","typ":"JWT"}'
          payload=$(cat <<-EOF
          {
            "iat": $(($(date +%s) - 60)),
            "exp": $(($(date +%s) + 600)),
            "iss": "${{ secrets.APP_SCHEDULER_ENGINE_ID }}"
          }
          EOF
          )
          base64_encode() {
            echo -n "$1" | openssl base64 -e | tr -d '\n' | tr -- '+/' '-_' | tr -d '='
          }
          header_base64=$(base64_encode "$header")
          payload_base64=$(base64_encode "$payload")
          signature=$(echo -n "${header_base64}.${payload_base64}" | openssl dgst -sha256 -sign app-private-key.pem | openssl base64 -e | tr -d '\n' | tr -- '+/' '-_' | tr -d '=')
          jwt="${header_base64}.${payload_base64}.${signature}"

          # Get access token
          token=$(curl -s -X POST \
            -H "Authorization: Bearer $jwt" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/app/installations/${{ secrets.APP_SCHEDULER_ENGINE_INSTALLATION_ID }}/access_tokens | jq -r .token)

          echo "token=$token" >> $GITHUB_ENV
      - name: Configure Git for App Scheduler Engine
        run: |
          git config --global user.name "GitHub App Scheduler Engine"
          git config --global user.email "github-app-scheduler-engine@example.com"
          git remote set-url origin https://x-access-token:${{ env.token }}@github.com/${{ github.repository }}
      - name: Bump version
        run: npm version ${{ github.event.inputs.version-type }}
      - name: Push changes
        run: git push
      - name: Build
        run: npm run 
      - name: Publish
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}